//
//  MovieDetailsViewController.swift
//  MovieSample
//
//  Created by rajesh.rao on 07/10/2018.
//  Copyright (c) 2018 rajesh.rao. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MovieDetailsDisplayLogic: class {
  func display(viewModel: MovieDetails.MetaData.ViewModel)
  func displayError(error: Error)
}

class MovieDetailsViewController: UIViewController, MovieDetailsDisplayLogic {
    var interactor: MovieDetailsBusinessLogic?
    var router: (NSObjectProtocol & MovieDetailsRoutingLogic & MovieDetailsDataPassing)?
    
    @IBOutlet weak var posterImageView: UIImageView!
    @IBOutlet weak var loadingIndicator: UIActivityIndicatorView!
    @IBOutlet weak var metaDataContainerView: UIView!
    @IBOutlet weak var actorLabel: UILabel!
    @IBOutlet weak var plotLabel: UILabel!
    @IBOutlet weak var ratingLabel: UILabel!
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup() {
        let viewController = self
        let interactor = MovieDetailsInteractor()
        let presenter = MovieDetailsPresenter()
        let router = MovieDetailsRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        self.title = router?.dataStore?.movie.Title
        getMovieDetails()
    }

    func getMovieDetails() {
        loadingIndicator.startAnimating()
        interactor?.getMovieDetails()//id: router!.dataStore!.movie.imdbID
    }
    
    func display(viewModel: MovieDetails.MetaData.ViewModel) {
        loadingIndicator.stopAnimating()
        
        let movieInfo = viewModel.info
        actorLabel.text = movieInfo.Actors
        plotLabel.text = movieInfo.Plot
        ratingLabel.text = movieInfo.imdbRating
        if let imageURL = movieInfo.Poster {
            posterImageView.kf.setImage(with: URL(string: imageURL))
        }
    }
    
    func displayError(error: Error) {
        loadingIndicator.startAnimating()
        
        // TODO: move this duplicate code to extension or something
        if  let _ = self.presentedViewController {
            return
        }
        let alertController = UIAlertController(title:"Error", message: error.localizedDescription, preferredStyle: .alert)
        alertController.addAction(UIAlertAction.init(title: "Dismiss", style: .cancel, handler: nil))
        self.present(alertController, animated: true, completion: nil)
    }
}
