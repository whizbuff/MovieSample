//
//  MovieDetailsViewController.swift
//  MovieSample
//
//  Created by rajesh.rao on 07/10/2018.
//  Copyright (c) 2018 rajesh.rao. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MovieDetailsDisplayLogic: class
{
  func displaySomething(viewModel: MovieDetails.Something.ViewModel)
}

class MovieDetailsViewController: UIViewController, MovieDetailsDisplayLogic
{
  var interactor: MovieDetailsBusinessLogic?
  var router: (NSObjectProtocol & MovieDetailsRoutingLogic & MovieDetailsDataPassing)?

    @IBOutlet weak var posterImageView: UIImageView!
    @IBOutlet weak var metaDataContainerView: UIView!
    // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup()
  {
    let viewController = self
    let interactor = MovieDetailsInteractor()
    let presenter = MovieDetailsPresenter()
    let router = MovieDetailsRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
    getMovieDetails()
  }
  
  // MARK: Do something
  
  //@IBOutlet weak var nameTextField: UITextField!
  
  func getMovieDetails()
  {
    let request = MovieDetails.Something.Request()
    interactor?.getMovie(request: request)
  }
  
  func displaySomething(viewModel: MovieDetails.Something.ViewModel)
  {
    //nameTextField.text = viewModel.name
  }
}
