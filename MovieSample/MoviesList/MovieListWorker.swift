//
//  MovieListWorker.swift
//  MovieSample
//
//  Created by rajesh.rao on 06/10/2018.
//  Copyright (c) 2018 rajesh.rao. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import Foundation

enum MovieListStoreResult {
    case success(MovieList)
    case failure(Error)
}

protocol MovieListStoreProtocol {
    func fetchMovies(url:URL, completionHandler: @escaping (MovieListStoreResult) -> Void)
}

class MovieListWorker
{    
    func fetchMovies(url:URL, completionHandler: @escaping (MovieListStoreResult) -> Void)
    {
        let defaultSession = URLSession(configuration: .default)
        let dataTask = defaultSession.dataTask(with: url) { (data, response, error) in
            if let error = error {
                completionHandler(.failure(error))
            } else if let _ = data, let netWorkResponse = response as? HTTPURLResponse, netWorkResponse.statusCode == 200 {
                var movieList: MovieList
                do {
                    let decoder = JSONDecoder()
                    movieList = try decoder.decode(MovieList.self, from: data!)
                    completionHandler(.success(movieList))
                }  catch let error {
                    completionHandler(.failure(error))
                }
            }
        }
        dataTask.resume()
    }
}
